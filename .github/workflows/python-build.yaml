name: Multi-Platform Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # XLSX工具构建 (轻量级依赖)
  build-xlsx-tools:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-22.04
            arch: x64
            platform: linux-x64
          - os: ubuntu-22.04
            arch: arm64
            platform: linux-arm64
          # Windows builds
          - os: windows-2022
            arch: x64
            platform: windows-x64
          # macOS builds
          - os: macos-14
            arch: arm64
            platform: macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.arch }}

      - name: Set commit version
        id: version
        run: |
          VERSION=$(git log --format=%B -1 | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller openpyxl argparse configparser

      - name: Build XLSX-split
        run: |
          pyinstaller --onefile --hidden-import=csv,os,codecs,configparser,argparse,openpyxl --strip scripts/XLSX-split.py --distpath dist/${{ matrix.platform }}

      - name: Build XLSX-SheetCutter  
        run: |
          pyinstaller --onefile --hidden-import=sys,os,openpyxl --strip scripts/XLSX-SheetCutter.py --distpath dist/${{ matrix.platform }}

      - name: Build XLSX-SheetMerger
        run: |
          pyinstaller --onefile --hidden-import=sys,os,openpyxl --strip scripts/XLSX-SheetMerger.py --distpath dist/${{ matrix.platform }}

      # 单独上传每个XLSX工具
      - name: Upload XLSX-split
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-split-${{ matrix.platform }}-${{ steps.version.outputs.version }}
          path: dist/${{ matrix.platform }}/XLSX-split*

      - name: Upload XLSX-SheetCutter
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-sheetcutter-${{ matrix.platform }}-${{ steps.version.outputs.version }}
          path: dist/${{ matrix.platform }}/XLSX-SheetCutter*

      - name: Upload XLSX-SheetMerger
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-sheetmerger-${{ matrix.platform }}-${{ steps.version.outputs.version }}
          path: dist/${{ matrix.platform }}/XLSX-SheetMerger*

      # XLSX工具合集上传
      - name: Upload XLSX Tools Bundle
        uses: actions/upload-artifact@v4
        with:
          name: xlsx-tools-bundle-${{ matrix.platform }}-${{ steps.version.outputs.version }}
          path: dist/${{ matrix.platform }}/*

  # XDB主程序构建 (重型依赖)
  build-xdb:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-22.04
            arch: x64
            platform: linux-x64
          - os: ubuntu-22.04
            arch: arm64  
            platform: linux-arm64
          # Windows builds
          - os: windows-2022
            arch: x64
            platform: windows-x64
          # macOS builds
          - os: macos-14
            arch: arm64
            platform: macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.arch }}

      - name: Set commit version
        id: version
        run: |
          VERSION=$(git log --format=%B -1 | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller pandas openpyxl pymysql tqdm psutil chardet

      - name: Build XDB
        run: |
          pyinstaller --onefile --hidden-import=pandas,openpyxl,pymysql,tqdm,psutil,chardet,concurrent.futures,multiprocessing --strip XDB.py --distpath dist/${{ matrix.platform }}

      - name: Upload XDB
        uses: actions/upload-artifact@v4
        with:
          name: xdb-${{ matrix.platform }}-${{ steps.version.outputs.version }}
          path: dist/${{ matrix.platform }}/*

  # 全平台合集打包
  create-release-bundle:
    needs: [build-xlsx-tools, build-xdb]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set commit version
        id: version
        run: |
          VERSION=$(git log --format=%B -1 | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      # 下载所有artifacts
      - name: Download all XLSX tools
        uses: actions/download-artifact@v4
        with:
          pattern: xlsx-tools-bundle-*
          path: release-bundle/xlsx-tools/
          merge-multiple: false

      - name: Download all XDB builds
        uses: actions/download-artifact@v4
        with:
          pattern: xdb-*
          path: release-bundle/xdb/
          merge-multiple: false

      # 创建完整发布包
      - name: Create complete release bundle
        run: |
          mkdir -p complete-release
          # 重新组织目录结构
          for platform in linux-x64 linux-arm64 windows-x64 macos-arm64; do
            mkdir -p "complete-release/$platform"
            
            # 复制XLSX工具
            if [ -d "release-bundle/xlsx-tools/xlsx-tools-bundle-$platform-${{ steps.version.outputs.version }}" ]; then
              cp -r "release-bundle/xlsx-tools/xlsx-tools-bundle-$platform-${{ steps.version.outputs.version }}/"* "complete-release/$platform/"
            fi
            
            # 复制XDB
            if [ -d "release-bundle/xdb/xdb-$platform-${{ steps.version.outputs.version }}" ]; then
              cp -r "release-bundle/xdb/xdb-$platform-${{ steps.version.outputs.version }}/"* "complete-release/$platform/"
            fi
          done

      - name: Upload Complete Release Bundle
        uses: actions/upload-artifact@v4
        with:
          name: xdb-complete-release-${{ steps.version.outputs.version }}
          path: complete-release/*
